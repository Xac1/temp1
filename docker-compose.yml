version: '3.9'

services:
  mysql:
    image: mysql:8.0.34-debian
    container_name: mysql-server
    restart: unless-stopped
    command: --default-authentication-plugin=caching_sha2_password

    #volumes:
    #  - ./mysql/data:/var/lib/mysql

    environment:
      #MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      #MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: py_db
      MYSQL_USER: py_user
      #MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
      #MYSQL_PASSWORD: ${DB_USER_PASSWORD}
      MYSQL_PASSWORD: py_pass

    ports:
      - "3306:3306"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysql -u root --password=$$MYSQL_ROOT_PASSWORD -e 'SELECT 1'"
        ]
      interval: 1s
      timeout: 2s
      retries: 5
    networks:
      - mysql-network

  python_testing_app:
    container_name: python_testing_container
    tty: true
    image: ghcr.io/xac1/actions-build-tests:tests
    build:
      context: .
      dockerfile: Dockerfile_tests
    environment:
      DB_HOST: mysql
      DB_USER: py_user
      #DB_PASSWORD_FILE: /run/secrets/mysql_password
      #DB_PASSWORD: ${DB_USER_PASSWORD}
      DB_PASSWORD: py_pass
      DB_DATABASE: py_db
    ports:
      - "80:8000"
    depends_on:
      - mysql
    networks:
      - mysql-network

  app-coverage:
    container_name: app-coverage
    tty: true
    image: ghcr.io/xac1/actions-build-tests:tests
    build:
      context: .
      dockerfile: Dockerfile_tests
    environment:
      DB_HOST: mysql
      DB_USER: py_user
      #DB_PASSWORD_FILE: /run/secrets/mysql_password
      #DB_PASSWORD: ${DB_USER_PASSWORD}
      DB_PASSWORD: py_pass
      DB_DATABASE: py_db
    entrypoint: >
      sh -c "coverage run -m unittest test.py &&
               coverage report -m &&
               coverage html -d /app/coverage
               cat /app/coverage/index.html
               echo 'Coverage report generated in /app/coverage'"
    # ---- for github actions usage case:
    # volumes:
    #   - ./coverage:/app/coverage
    ports:
      - "80:8000"
      - "81:80"
    depends_on:
      - mysql
    networks:
      - mysql-network

networks:
  mysql-network:
    driver: bridge

# ---- for secrets usage in docker-compose (you should create .env_mysql_root_password and .env_mysql_password files) and uncomment secrets section and line with passwords:
#secrets:
#  mysql_root_password:
#    file: .env_mysql_root_password
#  mysql_password:
#    file: .env_mysql_password
